service: graphql-service

frameworkVersion: '2'
useDotenv: true
variablesResolutionMode: 20210326

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  ListingsDB: ${self:custom.stage}-lunar-listings
  BookingsDB: ${self:custom.stage}-lunar-bookings
  tableThroughputs:
    prod: 1
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
  bundle:
    linting: false

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  lambdaHashingVersion: 20201221
  stage: dev
  logRetentionInDays: 14
  environment:
    BookingsDB: ${self:custom.BookingsDB}
    ListingsDB: ${self:custom.ListingsDB}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:DescribeStream
            - dynamodb:ListStream
          Resource:
            - "Fn::GetAtt": [ListingsDB, Arn]
            - "Fn::GetAtt": [BookingsDB, Arn]

functions:
  graphql:
    description: Graphql Service
    memorySize: 128
    timeout: 10
    handler: src/graphql.handler
    environment:
      SLS_DEBUG: true
    events:
      - http:
          path: /graphql
          method: post
          cors: true
      - http:
          path: /graphql
          method: get
          cors: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin

resources:
  - ${file(resources/listing-db.yml)}
  - ${file(resources/booking-db.yml)}